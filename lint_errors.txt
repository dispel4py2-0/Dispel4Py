dispel4py/__main__.py:36:5: E722 Do not use bare `except`
dispel4py/base.py:94:24: ARG002 Unused method argument: `data`
dispel4py/base.py:170:9: RET505 Unnecessary `else` after `return` statement
dispel4py/base.py:178:16: N803 Argument name `FunctionPE_class` should be lowercase
dispel4py/core.py:159:9: N802 Function name `setInputTypes` should be lowercase
dispel4py/core.py:178:9: N802 Function name `getOutputTypes` should be lowercase
dispel4py/core.py:206:13: PERF203 `try`-`except` within a loop incurs performance overhead
dispel4py/core.py:207:17: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
dispel4py/core.py:207:17: TRY200 Use `raise from` to specify exception cause
dispel4py/core.py:207:23: TRY002 Create your own exception
dispel4py/core.py:207:23: TRY003 Avoid specifying long messages outside the exception class
dispel4py/core.py:266:40: ARG002 Unused method argument: `kwargs`
dispel4py/core.py:274:41: ARG002 Unused method argument: `kwargs`
dispel4py/core.py:283:13: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
dispel4py/core.py:283:13: TRY200 Use `raise from` to specify exception cause
dispel4py/core.py:283:19: TRY002 Create your own exception
dispel4py/core.py:283:19: TRY003 Avoid specifying long messages outside the exception class
dispel4py/examples/graph_testing/group_by.py:23:5: N802 Function name `testGrouping` should be lowercase
dispel4py/examples/graph_testing/group_by_stateful.py:24:5: N802 Function name `testGrouping` should be lowercase
dispel4py/examples/graph_testing/grouping_alltoone.py:93:5: N802 Function name `testAlltoOne` should be lowercase
dispel4py/examples/graph_testing/grouping_alltoone_stateful.py:24:5: N802 Function name `testAlltoOne` should be lowercase
dispel4py/examples/graph_testing/grouping_onetoall.py:83:5: N802 Function name `testOnetoAll` should be lowercase
dispel4py/examples/graph_testing/grouping_onetoall_stateful.py:24:5: N802 Function name `testOnetoAll` should be lowercase
dispel4py/examples/graph_testing/grouping_split_merge.py:45:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:46:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:47:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:48:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:49:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:50:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:51:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:52:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:53:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:54:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:55:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:56:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:57:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:58:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:59:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:60:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:61:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:62:1: E101 Indentation contains mixed spaces and tabs
dispel4py/examples/graph_testing/grouping_split_merge.py:75:5: N802 Function name `testGrouping` should be lowercase
dispel4py/examples/graph_testing/large_teecopy.py:67:5: N802 Function name `testTee` should be lowercase
dispel4py/examples/graph_testing/large_teecopy.py:75:9: N806 Variable `numIterations` in function should be lowercase
dispel4py/examples/graph_testing/large_teecopy.py:76:5: E722 Do not use bare `except`
dispel4py/examples/graph_testing/large_teecopy.py:77:9: N806 Variable `numIterations` in function should be lowercase
dispel4py/examples/graph_testing/parallel_pipeline.py:70:5: N802 Function name `testParallelPipeline` should be lowercase
dispel4py/examples/graph_testing/partition_parallel_pipeline.py:65:5: N802 Function name `testParallelPipeline` should be lowercase
dispel4py/examples/graph_testing/pipeline_composite.py:106:5: N802 Function name `addTwo` should be lowercase
dispel4py/examples/graph_testing/pipeline_composite.py:113:5: N802 Function name `multiplyByFour` should be lowercase
dispel4py/examples/graph_testing/pipeline_composite.py:120:5: N802 Function name `divideByTwo` should be lowercase
dispel4py/examples/graph_testing/pipeline_test.py:96:5: N802 Function name `testPipeline` should be lowercase
dispel4py/examples/graph_testing/split_merge.py:71:5: N802 Function name `testSplitMerge` should be lowercase
dispel4py/examples/graph_testing/teecopy.py:68:5: N802 Function name `testTee` should be lowercase
dispel4py/examples/graph_testing/testing_PEs.py:1:1: N999 Invalid module name: 'testing_PEs'
dispel4py/examples/graph_testing/testing_PEs.py:30:24: N803 Argument name `numOutputs` should be lowercase
dispel4py/examples/graph_testing/testing_PEs.py:43:24: ARG002 Unused method argument: `inputs`
dispel4py/examples/graph_testing/testing_PEs.py:53:24: N803 Argument name `numIterations` should be lowercase
dispel4py/examples/graph_testing/testing_PEs.py:59:23: ARG002 Unused method argument: `inputs`
dispel4py/examples/graph_testing/testing_PEs.py:140:24: ARG002 Unused method argument: `inputs`
dispel4py/examples/graph_testing/testing_PEs.py:201:13: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
dispel4py/examples/graph_testing/testing_PEs.py:218:23: ARG002 Unused method argument: `inputs`
dispel4py/examples/graph_testing/testing_PEs.py:235:9: E722 Do not use bare `except`
dispel4py/examples/graph_testing/unconnected_pipeline.py:101:5: N802 Function name `testPipeline` should be lowercase
dispel4py/examples/graph_testing/unconnected_pipeline.py:118:5: N802 Function name `testUnconnected` should be lowercase
dispel4py/examples/graph_testing/word_count_filter.py:28:1: A001 Variable `filter` is shadowing a Python builtin
dispel4py/examples/prov_testing/mySplitMerge_prov.py:1:1: INP001 File `dispel4py/examples/prov_testing/mySplitMerge_prov.py` is part of an implicit namespace package. Add an `__init__.py`.
dispel4py/examples/prov_testing/mySplitMerge_prov.py:11:1: F403 `from dispel4py.provenance import *` used; unable to detect undefined names
dispel4py/examples/prov_testing/mySplitMerge_prov.py:27:9: N802 Function name `extractItemMetadata` should be lowercase
dispel4py/examples/prov_testing/mySplitMerge_prov.py:31:7: N801 Class name `splitPE` should use CapWords convention 
dispel4py/examples/prov_testing/mySplitMerge_prov.py:56:24: ARG002 Unused method argument: `inputs`
dispel4py/examples/prov_testing/mySplitMerge_prov.py:72:10: A002 Argument `input` is shadowing a Python builtin
dispel4py/examples/prov_testing/mySplitMerge_prov.py:79:7: N801 Class name `mergePE` should use CapWords convention 
dispel4py/examples/prov_testing/mySplitMerge_prov.py:85:14: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
dispel4py/examples/prov_testing/mySplitMerge_prov.py:115:7: N801 Class name `fwritePE` should use CapWords convention 
dispel4py/examples/prov_testing/mySplitMerge_prov.py:139:5: N802 Function name `testSplitMerge` should be lowercase
dispel4py/examples/prov_testing/mySplitMerge_prov_conf.py:1:1: INP001 File `dispel4py/examples/prov_testing/mySplitMerge_prov_conf.py` is part of an implicit namespace package. Add an `__init__.py`.
dispel4py/examples/prov_testing/mySplitMerge_prov_conf.py:7:1: F403 `from dispel4py.provenance import *` used; unable to detect undefined names
dispel4py/examples/prov_testing/mySplitMerge_prov_conf.py:23:9: N802 Function name `extractItemMetadata` should be lowercase
dispel4py/examples/prov_testing/mySplitMerge_prov_conf.py:27:7: N801 Class name `splitPE` should use CapWords convention 
dispel4py/examples/prov_testing/mySplitMerge_prov_conf.py:52:24: ARG002 Unused method argument: `inputs`
dispel4py/examples/prov_testing/mySplitMerge_prov_conf.py:68:10: A002 Argument `input` is shadowing a Python builtin
dispel4py/examples/prov_testing/mySplitMerge_prov_conf.py:75:7: N801 Class name `mergePE` should use CapWords convention 
dispel4py/examples/prov_testing/mySplitMerge_prov_conf.py:81:14: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
dispel4py/examples/prov_testing/mySplitMerge_prov_conf.py:111:7: N801 Class name `fwritePE` should use CapWords convention 
dispel4py/examples/prov_testing/mySplitMerge_prov_conf.py:135:5: N802 Function name `testSplitMerge` should be lowercase
dispel4py/examples/seismo/normalization.py:34:23: N803 Argument name `N` should be lowercase
dispel4py/examples/seismo/normalization.py:59:23: N803 Argument name `N` should be lowercase
dispel4py/examples/seismo/normalization.py:66:9: N806 Variable `L` in function should be lowercase
dispel4py/examples/seismo/preprocess_example.py:49:23: ARG002 Unused method argument: `inputs`
dispel4py/examples/seismo/preprocess_example.py:71:20: F821 Undefined name `file_dest`
dispel4py/examples/seismo/preprocess_example.py:91:20: ARG001 Unused function argument: `paz_remove`
dispel4py/examples/seismo/preprocess_example.py:96:5: A001 Variable `filter` is shadowing a Python builtin
dispel4py/examples/seismo/preprocess_example.py:128:1: N816 Variable `streamProducer` in global scope should not be mixedCase
dispel4py/examples/seismo/preprocess_example.py:129:1: N816 Variable `streamToFile` in global scope should not be mixedCase
dispel4py/examples/seismo/preprocess_example.py:131:1: N816 Variable `streamToFileWhitened` in global scope should not be mixedCase
dispel4py/examples/seismo/preprocess_example.py:148:1: N816 Variable `preTask` in global scope should not be mixedCase
dispel4py/examples/seismo/simple_PEs.py:1:1: N999 Invalid module name: 'simple_PEs'
dispel4py/examples/seismo/simple_PEs.py:9:24: N803 Argument name `numIterations` should be lowercase
dispel4py/examples/seismo/simple_PEs.py:9:24: ARG002 Unused method argument: `numIterations`
dispel4py/examples/seismo/simple_PEs.py:13:9: N802 Function name `getDataStreams` should be lowercase
dispel4py/examples/seismo/simple_PEs.py:19:9: N806 Variable `inputStr` in function should be lowercase
dispel4py/examples/seismo/simple_PEs.py:39:18: F821 Undefined name `read`
dispel4py/examples/seismo/simple_PEs.py:66:16: F821 Undefined name `scipy`
dispel4py/examples/seismo/test_chain.py:6:5: N802 Function name `PEMeanSub` should be lowercase
dispel4py/examples/seismo/test_chain.py:11:5: N802 Function name `PEDetrend` should be lowercase
dispel4py/examples/seismo/test_chain.py:27:23: ARG002 Unused method argument: `inputs`
dispel4py/examples/seismo/test_chain.py:36:1: N816 Variable `controlParameters` in global scope should not be mixedCase
dispel4py/examples/seismo/whiten.py:38:38: N803 Argument name `N` should be lowercase
dispel4py/examples/seismo/whiten.py:64:23: N803 Argument name `N` should be lowercase
dispel4py/examples/seismo/whiten.py:64:23: ARG001 Unused function argument: `N`
dispel4py/examples/seismo/xcorr.py:31:22: PLR1714 Consider merging multiple comparisons: `complex in (data1.dtype, data2.dtype)`. Use a `set` if the elements are hashable.
dispel4py/examples/seismo/xcorr.py:32:5: N806 Variable `N1` in function should be lowercase
dispel4py/examples/seismo/xcorr.py:33:5: N806 Variable `N2` in function should be lowercase
dispel4py/examples/seismo/xcorr.py:41:5: N806 Variable `IN1` in function should be lowercase
dispel4py/examples/seismo/xcorr.py:42:5: N806 Variable `IN1` in function should be lowercase
dispel4py/examples/seismo/xcorr.py:62:5: N802 Function name `PEXCorr1` should be lowercase
dispel4py/examples/seismo/xcorr.py:75:5: N802 Function name `PEXCorr2` should be lowercase
dispel4py/examples/seismo/xcorr.py:75:19: ARG001 Unused function argument: `st2`
dispel4py/examples/seismo/xcorr.py:93:29: PLR2004 Magic value used in comparison, consider replacing 2 with a constant variable
dispel4py/examples/seismo/xcorr.py:94:9: N806 Variable `K` in function should be lowercase
dispel4py/examples/seismo/xcorr.py:98:5: N806 Variable `Nt` in function should be lowercase
dispel4py/examples/seismo/xcorr.py:99:5: N806 Variable `Nc` in function should be lowercase
dispel4py/examples/seismo/xcorr.py:108:5: N806 Variable `E` in function should be lowercase
dispel4py/examples/seismo/xcorr.py:109:5: N806 Variable `normFact` in function should be lowercase
dispel4py/examples/seismo/xcorr.py:114:9: N806 Variable `dN` in function should be lowercase
dispel4py/new/aggregate.py:53:24: ARG002 Unused method argument: `inputs`
dispel4py/new/aggregate.py:98:24: ARG002 Unused method argument: `index`
dispel4py/new/aggregate.py:192:24: N803 Argument name `instPE` should be lowercase
dispel4py/new/aggregate.py:192:32: N803 Argument name `reducePE` should be lowercase
dispel4py/new/aggregate.py:202:5: N802 Function name `parallelCount` should be lowercase
dispel4py/new/aggregate.py:215:5: N802 Function name `parallelSum` should be lowercase
dispel4py/new/aggregate.py:225:5: N802 Function name `parallelMin` should be lowercase
dispel4py/new/aggregate.py:235:5: N802 Function name `parallelMax` should be lowercase
dispel4py/new/aggregate.py:245:5: N802 Function name `parallelAvg` should be lowercase
dispel4py/new/aggregate.py:251:5: N806 Variable `parAvg` in function should be lowercase
dispel4py/new/aggregate.py:252:5: N806 Variable `reduceAvg` in function should be lowercase
dispel4py/new/aggregate.py:259:5: N802 Function name `parallelStdDev` should be lowercase
dispel4py/new/aggregate.py:265:5: N806 Variable `parStdDev` in function should be lowercase
dispel4py/new/aggregate.py:266:5: N806 Variable `reduceStdDev` in function should be lowercase
dispel4py/new/dyn_redis_config.py:7:5: N806 Variable `HOST` in function should be lowercase
dispel4py/new/dyn_redis_config.py:8:5: N806 Variable `PORT` in function should be lowercase
dispel4py/new/dyn_redis_config.py:9:5: N806 Variable `USERNAME` in function should be lowercase
dispel4py/new/dyn_redis_config.py:10:5: N806 Variable `PASSWORD` in function should be lowercase
dispel4py/new/dynamic_redis.py:144:5: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/new/dynamic_redis.py:224:5: PLR0913 Too many arguments to function call (8 > 5)
dispel4py/new/dynamic_redis.py:263:5: RET505 Unnecessary `else` after `return` statement
dispel4py/new/dynamic_redis.py:269:5: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/new/dynamic_redis.py:289:5: RET505 Unnecessary `else` after `return` statement
dispel4py/new/dynamic_redis.py:297:9: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/new/dynamic_redis.py:341:5: PLR0913 Too many arguments to function call (8 > 5)
dispel4py/new/dynamic_redis.py:405:9: PLR5501 Use `elif` instead of `else` then `if`, to reduce indentation
dispel4py/new/dynamic_redis.py:448:5: PLR0912 Too many branches (21 > 12)
dispel4py/new/dynamic_redis.py:497:15: TRY002 Create your own exception
dispel4py/new/dynamic_redis.py:497:15: TRY003 Avoid specifying long messages outside the exception class
dispel4py/new/dynamic_redis.py:564:21: B007 Loop control variable `i` not used within loop body
dispel4py/new/dynamic_redis.py:576:7: FIX002 Line contains TODO, consider resolving the issue
dispel4py/new/logger.py:7:1: A001 Variable `format` is shadowing a Python builtin
dispel4py/new/logger.py:40:5: N802 Function name `simpleLogger` should be lowercase
dispel4py/new/logger.py:43:5: E722 Do not use bare `except`
dispel4py/new/monitoring.py:34:24: N803 Argument name `baseObject` should be lowercase
dispel4py/new/monitoring.py:43:24: N803 Argument name `baseObject` should be lowercase
dispel4py/new/monitoring.py:63:24: N803 Argument name `baseObject` should be lowercase
dispel4py/new/multi_process.py:93:5: PLR0912 Too many branches (19 > 12)
dispel4py/new/multi_process.py:93:5: PLR0915 Too many statements (58 > 50)
dispel4py/new/multi_process.py:127:13: N806 Variable `wrapperPE` in function should be lowercase
dispel4py/new/multi_process.py:133:19: TRY003 Avoid specifying long messages outside the exception class
dispel4py/new/multi_process.py:209:13: PERF203 `try`-`except` within a loop incurs performance overhead
dispel4py/new/multi_process.py:216:13: RET505 Unnecessary `else` after `return` statement
dispel4py/new/multi_process.py:234:13: N806 Variable `inputName` in function should be lowercase
dispel4py/new/multi_process.py:244:17: E722 Do not use bare `except`
dispel4py/new/multi_process.py:244:17: PERF203 `try`-`except` within a loop incurs performance overhead
dispel4py/new/multi_process.py:250:17: N806 Variable `_inputName` in function should be lowercase
dispel4py/new/new_dynamic_auto.py:71:5: N802 Function name `simpleLogger` should be lowercase
dispel4py/new/new_dynamic_auto.py:263:13: RET508 Unnecessary `else` after `break` statement
dispel4py/new/new_dynamic_auto.py:319:20: ARG002 Unused method argument: `result`
dispel4py/new/new_dynamic_redis_auto.py:324:13: RET508 Unnecessary `else` after `break` statement
dispel4py/new/new_dynamic_redis_auto.py:395:20: ARG002 Unused method argument: `result`
dispel4py/new/new_hybrid_redis.py:171:5: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/new/new_hybrid_redis.py:254:5: PLR0913 Too many arguments to function call (8 > 5)
dispel4py/new/new_hybrid_redis.py:297:5: RET505 Unnecessary `else` after `return` statement
dispel4py/new/new_hybrid_redis.py:303:5: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/new/new_hybrid_redis.py:323:5: RET505 Unnecessary `else` after `return` statement
dispel4py/new/new_hybrid_redis.py:331:9: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/new/new_hybrid_redis.py:378:5: PLR0913 Too many arguments to function call (8 > 5)
dispel4py/new/new_hybrid_redis.py:442:9: PLR5501 Use `elif` instead of `else` then `if`, to reduce indentation
dispel4py/new/new_hybrid_redis.py:485:5: PLR0912 Too many branches (19 > 12)
dispel4py/new/new_hybrid_redis.py:535:15: B016 Cannot raise a literal. Did you intend to return it or raise an Exception?
dispel4py/new/new_hybrid_redis.py:605:21: B007 Loop control variable `i` not used within loop body
dispel4py/new/new_hybrid_redis.py:617:7: FIX002 Line contains TODO, consider resolving the issue
dispel4py/new/processor.py:72:46: FIX002 Line contains TODO, consider resolving the issue
dispel4py/new/processor.py:103:40: FIX002 Line contains TODO, consider resolving the issue
dispel4py/new/processor.py:160:13: RET505 Unnecessary `elif` after `return` statement
dispel4py/new/processor.py:181:31: ARG002 Unused method argument: `data`
dispel4py/new/processor.py:204:31: ARG002 Unused method argument: `data`
dispel4py/new/processor.py:213:31: ARG002 Unused method argument: `data`
dispel4py/new/processor.py:234:11: FIX002 Line contains TODO, consider resolving the issue
dispel4py/new/processor.py:320:21: PERF203 `try`-`except` within a loop incurs performance overhead
dispel4py/new/processor.py:359:5: RET505 Unnecessary `else` after `return` statement
dispel4py/new/processor.py:414:5: PLR0912 Too many branches (15 > 12)
dispel4py/new/processor.py:477:9: SIM105 Use `contextlib.suppress(KeyError)` instead of `try`-`except`-`pass`
dispel4py/new/processor.py:534:23: TRY002 Create your own exception
dispel4py/new/processor.py:534:23: TRY003 Avoid specifying long messages outside the exception class
dispel4py/new/processor.py:612:17: SIM105 Use `contextlib.suppress(ValueError)` instead of `try`-`except`-`pass`
dispel4py/new/processor.py:614:17: PERF203 `try`-`except` within a loop incurs performance overhead
dispel4py/new/processor.py:671:17: PERF203 `try`-`except` within a loop incurs performance overhead
dispel4py/new/processor.py:682:9: PLR0912 Too many branches (16 > 12)
dispel4py/new/processor.py:707:21: SIM108 Use ternary operator `provided_inputs = [{}] if not pe.inputconnections else []` instead of `if`-`else`-block
dispel4py/new/processor.py:720:17: PERF203 `try`-`except` within a loop incurs performance overhead
dispel4py/new/processor.py:973:11: FIX002 Line contains TODO, consider resolving the issue
dispel4py/new/simple_process.py:81:5: N802 Function name `simpleLogger` should be lowercase
dispel4py/new/simple_process.py:132:31: ARG001 Unused function argument: `args`
dispel4py/new/simple_process.py:146:5: E722 Do not use bare `except`
dispel4py/new/spark_process.py:35:5: N802 Function name `simpleLogger` should be lowercase
dispel4py/new/spark_process.py:54:13: B007 Loop control variable `output` not used within loop body
dispel4py/new/spark_process.py:119:9: RET505 Unnecessary `else` after `return` statement
dispel4py/new/spark_process.py:135:9: RET505 Unnecessary `else` after `return` statement
dispel4py/new/spark_process.py:139:5: PLR0912 Too many branches (29 > 12)
dispel4py/new/spark_process.py:139:5: PLR0915 Too many statements (62 > 50)
dispel4py/new/spark_process.py:139:35: ARG001 Unused function argument: `args`
dispel4py/new/spark_process.py:200:16: E721 Do not compare types, use `isinstance()`
dispel4py/new/spark_process.py:227:47: ARG005 Unused lambda argument: `x`
dispel4py/new/spark_process.py:263:5: E722 Do not use bare `except`
dispel4py/new/zmq_multi.py:106:20: ARG002 Unused method argument: `topic`
dispel4py/new/zmq_multi.py:128:13: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
dispel4py/new/zmq_multi.py:139:35: F821 Undefined name `workflow`
dispel4py/new/zmq_multi.py:143:32: F821 Undefined name `topic`
dispel4py/new/zmq_multi.py:146:5: N802 Function name `_processWorker` should be lowercase
dispel4py/new/zmq_multi.py:146:27: ARG001 Unused function argument: `proc`
dispel4py/optimization/naive_partition.py:98:9: PERF402 Use `list` or `list.copy` to create a copy of a list
dispel4py/optimization/naive_partition.py:109:5: RET505 Unnecessary `else` after `return` statement
dispel4py/optimization/naive_partition.py:132:8: FIX004 Line contains HACK, consider resolving the issue
dispel4py/optimization/stage.py:16:9: SIM102 Use a single `if` statement instead of nested `if` statements
dispel4py/optimization/stage.py:34:5: PLR0912 Too many branches (13 > 12)
dispel4py/optimization/stage.py:60:15: TRY003 Avoid specifying long messages outside the exception class
dispel4py/optimization/stage.py:61:5: RET506 Unnecessary `else` after `raise` statement
dispel4py/optimization/stage.py:83:9: B007 Loop control variable `obj` not used within loop body
dispel4py/provenance.py:73:34: ARG001 Unused function argument: `verbose`
dispel4py/provenance.py:118:47: ARG001 Unused function argument: `kwargs`
dispel4py/provenance.py:138:9: RET505 Unnecessary `else` after `return` statement
dispel4py/provenance.py:144:23: ARG001 Unused function argument: `self`
dispel4py/provenance.py:144:30: ARG001 Unused function argument: `args`
dispel4py/provenance.py:144:38: ARG001 Unused function argument: `kwargs`
dispel4py/provenance.py:153:5: N802 Function name `getDestination_prov` should be lowercase
dispel4py/provenance.py:171:5: N802 Function name `commandChain` should be lowercase
dispel4py/provenance.py:187:5: RET505 Unnecessary `else` after `return` statement
dispel4py/provenance.py:191:5: N802 Function name `toW3Cprov` should be lowercase
dispel4py/provenance.py:191:5: PLR0912 Too many branches (40 > 12)
dispel4py/provenance.py:191:5: PLR0915 Too many statements (87 > 50)
dispel4py/provenance.py:191:21: A002 Argument `format` is shadowing a Python builtin
dispel4py/provenance.py:267:9: RET505 Unnecessary `else` after `return` statement
dispel4py/provenance.py:276:13: PLR5501 Use `elif` instead of `else` then `if`, to reduce indentation
dispel4py/provenance.py:367:5: RET505 Unnecessary `else` after `return` statement
dispel4py/provenance.py:371:5: N802 Function name `getUniqueId` should be lowercase
dispel4py/provenance.py:374:5: RET505 Unnecessary `else` after `return` statement
dispel4py/provenance.py:376:56: F821 Undefined name `self`
dispel4py/provenance.py:446:9: N802 Function name `getProvStateObjectId` should be lowercase
dispel4py/provenance.py:452:9: RET505 Unnecessary `else` after `return` statement
dispel4py/provenance.py:455:9: N802 Function name `makeProcessId` should be lowercase
dispel4py/provenance.py:455:31: ARG002 Unused method argument: `kwargs`
dispel4py/provenance.py:458:9: N802 Function name `makeUniqueId` should be lowercase
dispel4py/provenance.py:458:28: ARG002 Unused method argument: `data`
dispel4py/provenance.py:458:34: ARG002 Unused method argument: `port`
dispel4py/provenance.py:461:9: N802 Function name `_updateState` should be lowercase
dispel4py/provenance.py:461:34: A002 Argument `id` is shadowing a Python builtin
dispel4py/provenance.py:467:9: N802 Function name `getUniqueId` should be lowercase
dispel4py/provenance.py:474:9: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/provenance.py:475:22: N803 Argument name `voidInvocation` should be lowercase
dispel4py/provenance.py:475:38: ARG002 Unused method argument: `oport`
dispel4py/provenance.py:475:50: ARG002 Unused method argument: `iport`
dispel4py/provenance.py:475:62: ARG002 Unused method argument: `data`
dispel4py/provenance.py:475:73: ARG002 Unused method argument: `metadata`
dispel4py/provenance.py:490:24: ARG002 Unused method argument: `args`
dispel4py/provenance.py:491:16: PLW0603 Using the global statement to update `_d4p_plan_sqn` is discouraged
dispel4py/provenance.py:565:9: N802 Function name `__getUniqueId` should be lowercase
dispel4py/provenance.py:568:9: N802 Function name `getDataStreams` should be lowercase
dispel4py/provenance.py:578:9: N802 Function name `getInputAt` should be lowercase
dispel4py/provenance.py:584:9: RET505 Unnecessary `else` after `return` statement
dispel4py/provenance.py:615:16: E721 Do not compare types, use `isinstance()`
dispel4py/provenance.py:627:9: N802 Function name `addNamespacePrefix` should be lowercase
dispel4py/provenance.py:637:9: N802 Function name `extractItemMetadata` should be lowercase
dispel4py/provenance.py:637:35: ARG002 Unused method argument: `data`
dispel4py/provenance.py:637:41: ARG002 Unused method argument: `port`
dispel4py/provenance.py:659:25: SIM115 Use context handler for opening files
dispel4py/provenance.py:674:9: N802 Function name `sendProvToSensor` should be lowercase
dispel4py/provenance.py:689:9: N802 Function name `sendProvToService` should be lowercase
dispel4py/provenance.py:700:9: N802 Function name `sendProvRequestToService` should be lowercase
dispel4py/provenance.py:735:9: N802 Function name `writeProvToFile` should be lowercase
dispel4py/provenance.py:742:21: SIM115 Use context handler for opening files
dispel4py/provenance.py:749:9: N802 Function name `flushData` should be lowercase
dispel4py/provenance.py:749:9: PLR0912 Too many branches (13 > 12)
dispel4py/provenance.py:763:13: E722 Do not use bare `except`
dispel4py/provenance.py:778:13: E722 Do not use bare `except`
dispel4py/provenance.py:782:13: TRY300 Consider moving this statement to an `else` block
dispel4py/provenance.py:796:9: E722 Do not use bare `except`
dispel4py/provenance.py:799:9: N802 Function name `initParameters` should be lowercase
dispel4py/provenance.py:813:9: E722 Do not use bare `except`
dispel4py/provenance.py:832:9: N802 Function name `importInputData` should be lowercase
dispel4py/provenance.py:838:13: RET505 Unnecessary `else` after `return` statement
dispel4py/provenance.py:841:24: E721 Do not compare types, use `isinstance()`
dispel4py/provenance.py:852:9: N802 Function name `writeResults` should be lowercase
dispel4py/provenance.py:870:9: N802 Function name `__markIteration` should be lowercase
dispel4py/provenance.py:889:17: E722 Do not use bare `except`
dispel4py/provenance.py:905:9: N802 Function name `prepareOutputStream` should be lowercase
dispel4py/provenance.py:933:13: TRY300 Consider moving this statement to an `else` block
dispel4py/provenance.py:939:9: N802 Function name `ignorePastFlow` should be lowercase
dispel4py/provenance.py:947:9: N802 Function name `ignoreState` should be lowercase
dispel4py/provenance.py:955:9: N802 Function name `packageAll` should be lowercase
dispel4py/provenance.py:1057:9: N802 Function name `__importInputMetadata` should be lowercase
dispel4py/provenance.py:1061:13: B018 Found useless expression. Either assign it to a variable or remove it.
dispel4py/provenance.py:1071:9: N802 Function name `discardState` should be lowercase
dispel4py/provenance.py:1083:9: N802 Function name `discardInFlow` should be lowercase
dispel4py/provenance.py:1083:9: PLR0912 Too many branches (17 > 12)
dispel4py/provenance.py:1083:43: N803 Argument name `discardState` should be lowercase
dispel4py/provenance.py:1133:9: PLR0913 Too many arguments to function call (9 > 5)
dispel4py/provenance.py:1138:9: A002 Argument `format` is shadowing a Python builtin
dispel4py/provenance.py:1142:9: ARG002 Unused method argument: `stateless`
dispel4py/provenance.py:1200:9: N802 Function name `extractProvenance` should be lowercase
dispel4py/provenance.py:1200:9: PLR0913 Too many arguments to function call (9 > 5)
dispel4py/provenance.py:1204:9: A002 Argument `format` is shadowing a Python builtin
dispel4py/provenance.py:1340:9: N802 Function name `setStateDerivations` should be lowercase
dispel4py/provenance.py:1343:9: N802 Function name `checkSelectiveRule` should be lowercase
dispel4py/provenance.py:1358:21: RET505 Unnecessary `elif` after `return` statement
dispel4py/provenance.py:1359:68: E721 Do not compare types, use `isinstance()`
dispel4py/provenance.py:1362:29: E721 Do not compare types, use `isinstance()`
dispel4py/provenance.py:1366:57: E721 Do not compare types, use `isinstance()`
dispel4py/provenance.py:1369:9: N802 Function name `checkTransferRule` should be lowercase
dispel4py/provenance.py:1386:21: RET505 Unnecessary `elif` after `return` statement
dispel4py/provenance.py:1415:9: N802 Function name `buildUserMetadata` should be lowercase
dispel4py/provenance.py:1417:9: N806 Variable `streamItem` in function should be lowercase
dispel4py/provenance.py:1467:9: N802 Function name `removeDerivation` should be lowercase
dispel4py/provenance.py:1469:13: A001 Variable `id` is shadowing a Python builtin
dispel4py/provenance.py:1473:9: PLR5501 Use `elif` instead of `else` then `if`, to reduce indentation
dispel4py/provenance.py:1479:9: N802 Function name `extractDataSourceId` should be lowercase
dispel4py/provenance.py:1488:9: N802 Function name `buildDerivation` should be lowercase
dispel4py/provenance.py:1489:33: E721 Do not compare types, use `isinstance()`
dispel4py/provenance.py:1507:13: A001 Variable `id` is shadowing a Python builtin
dispel4py/provenance.py:1518:9: N802 Function name `dicToKeyVal` should be lowercase
dispel4py/provenance.py:1518:27: A002 Argument `dict` is shadowing a Python builtin
dispel4py/provenance.py:1518:33: N803 Argument name `valueToString` should be lowercase
dispel4py/provenance.py:1528:25: PLW2901 `for` loop variable `v` overwritten by assignment target
dispel4py/provenance.py:1535:13: TRY300 Consider moving this statement to an `else` block
dispel4py/provenance.py:1553:9: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/provenance.py:1554:22: N803 Argument name `voidInvocation` should be lowercase
dispel4py/provenance.py:1554:38: ARG002 Unused method argument: `oport`
dispel4py/provenance.py:1554:50: ARG002 Unused method argument: `iport`
dispel4py/provenance.py:1554:62: ARG002 Unused method argument: `data`
dispel4py/provenance.py:1554:73: ARG002 Unused method argument: `metadata`
dispel4py/provenance.py:1571:9: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/provenance.py:1572:22: N803 Argument name `voidInvocation` should be lowercase
dispel4py/provenance.py:1572:38: ARG002 Unused method argument: `oport`
dispel4py/provenance.py:1572:73: ARG002 Unused method argument: `metadata`
dispel4py/provenance.py:1580:20: PLR1714 Consider merging multiple comparisons: `x not in (iport, "_d4py_feedback")`. Use a `set` if the elements are hashable.
dispel4py/provenance.py:1585:9: SIM102 Use a single `if` statement instead of nested `if` statements
dispel4py/provenance.py:1610:9: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/provenance.py:1611:22: N803 Argument name `voidInvocation` should be lowercase
dispel4py/provenance.py:1611:22: ARG002 Unused method argument: `voidInvocation`
dispel4py/provenance.py:1611:38: ARG002 Unused method argument: `iport`
dispel4py/provenance.py:1611:50: ARG002 Unused method argument: `oport`
dispel4py/provenance.py:1611:62: ARG002 Unused method argument: `data`
dispel4py/provenance.py:1611:73: ARG002 Unused method argument: `metadata`
dispel4py/provenance.py:1631:9: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/provenance.py:1632:22: N803 Argument name `voidInvocation` should be lowercase
dispel4py/provenance.py:1632:38: ARG002 Unused method argument: `oport`
dispel4py/provenance.py:1632:73: ARG002 Unused method argument: `metadata`
dispel4py/provenance.py:1660:9: SIM102 Use a single `if` statement instead of nested `if` statements
dispel4py/provenance.py:1690:9: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/provenance.py:1691:22: N803 Argument name `voidInvocation` should be lowercase
dispel4py/provenance.py:1691:38: ARG002 Unused method argument: `iport`
dispel4py/provenance.py:1691:50: ARG002 Unused method argument: `oport`
dispel4py/provenance.py:1691:62: ARG002 Unused method argument: `data`
dispel4py/provenance.py:1691:73: ARG002 Unused method argument: `metadata`
dispel4py/provenance.py:1710:9: PLR0913 Too many arguments to function call (6 > 5)
dispel4py/provenance.py:1711:22: N803 Argument name `voidInvocation` should be lowercase
dispel4py/provenance.py:1733:9: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/provenance.py:1734:22: N803 Argument name `voidInvocation` should be lowercase
dispel4py/provenance.py:1734:38: ARG002 Unused method argument: `iport`
dispel4py/provenance.py:1762:44: N803 Argument name `voidInvocation` should be lowercase
dispel4py/provenance.py:1766:15: F821 Undefined name `ProvenanceOnWriteOnly`
dispel4py/provenance.py:1772:16: A002 Argument `object` is shadowing a Python builtin
dispel4py/provenance.py:1778:5: N806 Variable `methodList` in function should be lowercase
dispel4py/provenance.py:1779:5: N806 Variable `processFunc` in function should be lowercase
dispel4py/provenance.py:1782:13: F524 `.format` call is missing argument(s) for placeholder(s): 1
dispel4py/provenance.py:1796:5: N802 Function name `injectProv` should be lowercase
dispel4py/provenance.py:1796:5: PLR0912 Too many branches (20 > 12)
dispel4py/provenance.py:1797:5: A002 Argument `object` is shadowing a Python builtin
dispel4py/provenance.py:1797:13: N803 Argument name `provType` should be lowercase
dispel4py/provenance.py:1797:23: ARG001 Unused function argument: `active`
dispel4py/provenance.py:1797:36: N803 Argument name `componentsType` should be lowercase
dispel4py/provenance.py:1876:9: PLW0120 `else` clause on loop without a `break` statement; remove the `else` and de-indent all the code inside it
dispel4py/provenance.py:1903:21: N803 Argument name `runId` should be lowercase
dispel4py/provenance.py:2020:5: PLR0912 Too many branches (18 > 12)
dispel4py/provenance.py:2077:5: PLR5501 Use `elif` instead of `else` then `if`, to reduce indentation
dispel4py/provenance.py:2081:13: B015 Pointless comparison. This comparison does nothing but waste CPU instructions. Either prepend `assert` or remove it.
dispel4py/provenance.py:2100:14: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
dispel4py/provenance.py:2101:5: N815 Variable `provenanceCommandLineConfigPresent` in class scope should not be mixedCase
dispel4py/provenance.py:2102:26: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
dispel4py/provenance.py:2107:5: PLR0913 Too many arguments to function call (23 > 5)
dispel4py/provenance.py:2107:5: PLR0912 Too many branches (34 > 12)
dispel4py/provenance.py:2107:5: PLR0915 Too many statements (89 > 50)
dispel4py/provenance.py:2109:5: N803 Argument name `provRecorderClass` should be lowercase
dispel4py/provenance.py:2110:5: N803 Argument name `provImpClass` should be lowercase
dispel4py/provenance.py:2111:5: A002 Argument `input` is shadowing a Python builtin
dispel4py/provenance.py:2113:5: N803 Argument name `workflowId` should be lowercase
dispel4py/provenance.py:2116:5: N803 Argument name `workflowName` should be lowercase
dispel4py/provenance.py:2117:5: N803 Argument name `workflowType` should be lowercase
dispel4py/provenance.py:2119:5: N803 Argument name `runId` should be lowercase
dispel4py/provenance.py:2120:5: N803 Argument name `componentsType` should be lowercase
dispel4py/provenance.py:2121:5: N803 Argument name `clustersRecorders` should be lowercase
dispel4py/provenance.py:2122:5: N803 Argument name `feedbackPEs` should be lowercase
dispel4py/provenance.py:2127:5: N803 Argument name `sprovConfig` should be lowercase
dispel4py/provenance.py:2128:5: N803 Argument name `sessionId` should be lowercase
dispel4py/provenance.py:2204:9: N806 Variable `feedbackPEs` in function should be lowercase
dispel4py/provenance.py:2206:9: N806 Variable `clustersRecorders` in function should be lowercase
dispel4py/provenance.py:2208:9: A001 Variable `input` is shadowing a Python builtin
dispel4py/provenance.py:2226:13: N806 Variable `runId` in function should be lowercase
dispel4py/provenance.py:2228:13: N806 Variable `sessionId` in function should be lowercase
dispel4py/provenance.py:2234:13: A001 Variable `input` is shadowing a Python builtin
dispel4py/provenance.py:2238:13: N806 Variable `workflowId` in function should be lowercase
dispel4py/provenance.py:2242:13: N806 Variable `workflowName` in function should be lowercase
dispel4py/provenance.py:2246:13: N806 Variable `workflowType` in function should be lowercase
dispel4py/provenance.py:2248:13: N806 Variable `componentsType` in function should be lowercase
dispel4py/provenance.py:2255:15: TRY002 Create your own exception
dispel4py/provenance.py:2255:15: TRY003 Avoid specifying long messages outside the exception class
dispel4py/provenance.py:2257:9: N806 Variable `runId` in function should be lowercase
dispel4py/provenance.py:2266:9: N806 Variable `sessionId` in function should be lowercase
dispel4py/provenance.py:2279:12: PLW0602 Using global for `meta` but no assignment is done
dispel4py/provenance.py:2353:5: N802 Function name `attachProvenanceRecorderPE` should be lowercase
dispel4py/provenance.py:2353:5: PLR0913 Too many arguments to function call (7 > 5)
dispel4py/provenance.py:2353:5: PLR0912 Too many branches (17 > 12)
dispel4py/provenance.py:2355:5: N803 Argument name `provRecorderClass` should be lowercase
dispel4py/provenance.py:2356:5: N803 Argument name `runId` should be lowercase
dispel4py/provenance.py:2359:5: N803 Argument name `clustersRecorders` should be lowercase
dispel4py/provenance.py:2360:5: N803 Argument name `feedbackPEs` should be lowercase
dispel4py/provenance.py:2363:9: N806 Variable `feedbackPEs` in function should be lowercase
dispel4py/provenance.py:2365:9: N806 Variable `clustersRecorders` in function should be lowercase
dispel4py/provenance.py:2371:5: E722 Do not use bare `except`
dispel4py/provenance.py:2375:15: TRY002 Create your own exception
dispel4py/provenance.py:2375:15: TRY003 Avoid specifying long messages outside the exception class
dispel4py/provenance.py:2394:13: PLR5501 Use `elif` instead of `else` then `if`, to reduce indentation
dispel4py/provenance.py:2459:9: N802 Function name `packageAll` should be lowercase
dispel4py/provenance.py:2462:9: N802 Function name `makeRunMetadataBundle` should be lowercase
dispel4py/provenance.py:2462:9: PLR0913 Too many arguments to function call (16 > 5)
dispel4py/provenance.py:2464:9: A002 Argument `input` is shadowing a Python builtin
dispel4py/provenance.py:2466:9: N803 Argument name `workflowId` should be lowercase
dispel4py/provenance.py:2469:9: N803 Argument name `workflowName` should be lowercase
dispel4py/provenance.py:2470:9: N803 Argument name `workflowType` should be lowercase
dispel4py/provenance.py:2471:9: ARG002 Unused method argument: `w3c`
dispel4py/provenance.py:2472:9: N803 Argument name `runId` should be lowercase
dispel4py/provenance.py:2473:9: N803 Argument name `sessionId` should be lowercase
dispel4py/provenance.py:2475:9: N803 Argument name `subProcesses` should be lowercase
dispel4py/provenance.py:2481:13: A001 Variable `input` is shadowing a Python builtin
dispel4py/provenance.py:2486:19: TRY002 Create your own exception
dispel4py/provenance.py:2486:19: TRY003 Avoid specifying long messages outside the exception class
dispel4py/provenance.py:2487:9: RET506 Unnecessary `else` after `raise` statement
dispel4py/provenance.py:2513:24: ARG002 Unused method argument: `inputs`
dispel4py/provenance.py:2527:51: F821 Undefined name `get_installed_distributions`
dispel4py/provenance.py:2545:9: N802 Function name `packageAll` should be lowercase
dispel4py/provenance.py:2548:24: ARG002 Unused method argument: `inputs`
dispel4py/provenance.py:2567:24: ARG002 Unused method argument: `name`
dispel4py/provenance.py:2567:51: N803 Argument name `toW3C` should be lowercase
dispel4py/provenance.py:2567:51: ARG002 Unused method argument: `toW3C`
dispel4py/provenance.py:2575:57: N803 Argument name `toW3C` should be lowercase
dispel4py/provenance.py:2590:17: SIM115 Use context handler for opening files
dispel4py/provenance.py:2596:60: N803 Argument name `toW3C` should be lowercase
dispel4py/provenance.py:2631:64: N803 Argument name `toW3C` should be lowercase
dispel4py/provenance.py:2670:30: PLR2004 Magic value used in comparison, consider replacing 100 with a constant variable
dispel4py/provenance.py:2690:30: PLR2004 Magic value used in comparison, consider replacing 2 with a constant variable
dispel4py/provenance.py:2702:61: N803 Argument name `toW3C` should be lowercase
dispel4py/provenance.py:2709:17: SIM115 Use context handler for opening files
dispel4py/provenance.py:2726:30: PLR2004 Magic value used in comparison, consider replacing 140 with a constant variable
dispel4py/provenance.py:2727:21: SIM115 Use context handler for opening files
dispel4py/provenance.py:2733:24: N803 Argument name `toW3C` should be lowercase
dispel4py/seismo/obspy_stream.py:17:9: N802 Function name `setCompute` should be lowercase
dispel4py/seismo/obspy_stream.py:27:9: N802 Function name `setInputTypes` should be lowercase
dispel4py/seismo/obspy_stream.py:30:9: N802 Function name `getOutputTypes` should be lowercase
dispel4py/seismo/obspy_stream.py:46:9: E722 Do not use bare `except`
dispel4py/seismo/obspy_stream.py:57:5: N802 Function name `createProcessingComposite` should be lowercase
dispel4py/seismo/obspy_stream.py:58:23: N803 Argument name `controlParameters` should be lowercase
dispel4py/seismo/obspy_stream.py:58:47: N803 Argument name `provRecorder` should be lowercase
dispel4py/seismo/obspy_stream.py:68:9: N806 Variable `controlParameters` in function should be lowercase
dispel4py/seismo/seismo.py:6:1: F403 `from dispel4py.provenance import *` used; unable to detect undefined names
dispel4py/seismo/seismo.py:18:9: N802 Function name `extractItemMetadata` should be lowercase
dispel4py/seismo/seismo.py:18:9: PLR0912 Too many branches (20 > 12)
dispel4py/seismo/seismo.py:18:41: ARG002 Unused method argument: `port`
dispel4py/seismo/seismo.py:25:41: E721 Do not compare types, use `isinstance()`
dispel4py/seismo/seismo.py:47:29: PERF203 `try`-`except` within a loop incurs performance overhead
dispel4py/seismo/seismo.py:61:13: TRY300 Consider moving this statement to an `else` block
dispel4py/seismo/seismo_2.py:39:45: E999 SyntaxError: Unexpected token ','
dispel4py/test/aggregate_test.py:1:1: INP001 File `dispel4py/test/aggregate_test.py` is part of an implicit namespace package. Add an `__init__.py`.
dispel4py/test/aggregate_test.py:87:5: N802 Function name `testSum` should be lowercase
dispel4py/test/aggregate_test.py:97:5: N802 Function name `testAvg` should be lowercase
dispel4py/test/aggregate_test.py:106:5: N802 Function name `testStdDev` should be lowercase
dispel4py/test/aggregate_test.py:119:5: N802 Function name `testCount` should be lowercase
dispel4py/test/aggregate_test.py:130:5: N802 Function name `testMinMax` should be lowercase
dispel4py/test/aggregate_test.py:155:5: N802 Function name `testContinuousReduce` should be lowercase
dispel4py/test/mpi_process_test.py:1:1: INP001 File `dispel4py/test/mpi_process_test.py` is part of an implicit namespace package. Add an `__init__.py`.
dispel4py/test/multi_process_test.py:1:1: INP001 File `dispel4py/test/multi_process_test.py` is part of an implicit namespace package. Add an `__init__.py`.
dispel4py/test/multi_process_test.py:38:5: N802 Function name `testPipeline` should be lowercase
dispel4py/test/multi_process_test.py:51:5: N802 Function name `testSquare` should be lowercase
dispel4py/test/multi_process_test.py:65:5: N802 Function name `testTee` should be lowercase
dispel4py/test/partitioned_test.py:1:1: INP001 File `dispel4py/test/partitioned_test.py` is part of an implicit namespace package. Add an `__init__.py`.
dispel4py/test/partitioned_test.py:18:7: E999 SyntaxError: Unexpected token 'processes'
dispel4py/test/simple_process_test.py:1:1: INP001 File `dispel4py/test/simple_process_test.py` is part of an implicit namespace package. Add an `__init__.py`.
dispel4py/test/simple_process_test.py:25:5: N802 Function name `testPipeline` should be lowercase
dispel4py/test/simple_process_test.py:38:5: N802 Function name `testSquare` should be lowercase
dispel4py/test/simple_process_test.py:52:5: N802 Function name `testTee` should be lowercase
dispel4py/test/simple_process_test.py:66:5: N802 Function name `testWriter` should be lowercase
dispel4py/test/test_code_formatting.py:1:1: INP001 File `dispel4py/test/test_code_formatting.py` is part of an implicit namespace package. Add an `__init__.py`.
dispel4py/test/test_code_formatting.py:33:9: PLW2901 `for` loop variable `filenames` overwritten by assignment target
dispel4py/test/test_code_formatting.py:53:39: PLR2004 Magic value used in comparison, consider replacing 10 with a constant variable
dispel4py/utils.py:27:5: N802 Function name `findWorkflowGraph` should be lowercase
dispel4py/utils.py:35:13: SIM102 Use a single `if` statement instead of nested `if` statements
dispel4py/utils.py:43:5: N802 Function name `loadGraphFromFile` should be lowercase
dispel4py/utils.py:57:5: N802 Function name `loadGraph` should be lowercase
dispel4py/utils.py:100:34: ARG001 Unused function argument: `verbose`
dispel4py/workflow_graph.py:71:13: TRY004 Prefer `TypeError` exception for invalid type
dispel4py/workflow_graph.py:71:19: TRY002 Create your own exception
dispel4py/workflow_graph.py:71:19: TRY003 Avoid specifying long messages outside the exception class
dispel4py/workflow_graph.py:138:13: PIE804 Unnecessary `dict` kwargs
dispel4py/workflow_graph.py:166:9: N806 Variable `inputTypes` in function should be lowercase
dispel4py/workflow_graph.py:171:17: N806 Variable `sourceNode` in function should be lowercase
dispel4py/workflow_graph.py:174:17: N806 Variable `inType` in function should be lowercase
dispel4py/workflow_graph.py:184:9: N806 Variable `hasComposites` in function should be lowercase
dispel4py/workflow_graph.py:185:9: N806 Variable `toRemove` in function should be lowercase
dispel4py/workflow_graph.py:187:13: N806 Variable `hasComposites` in function should be lowercase
dispel4py/workflow_graph.py:188:13: N806 Variable `toRemove` in function should be lowercase
dispel4py/workflow_graph.py:191:21: N806 Variable `hasComposites` in function should be lowercase
dispel4py/workflow_graph.py:193:21: N806 Variable `wfGraph` in function should be lowercase
dispel4py/workflow_graph.py:199:25: N806 Variable `toPE` in function should be lowercase
dispel4py/workflow_graph.py:199:31: N806 Variable `toConnection` in function should be lowercase
dispel4py/workflow_graph.py:201:25: N806 Variable `fromPE` in function should be lowercase
dispel4py/workflow_graph.py:201:33: N806 Variable `fromConnection` in function should be lowercase
dispel4py/workflow_graph.py:207:33: N806 Variable `fromPE` in function should be lowercase
dispel4py/workflow_graph.py:208:33: N806 Variable `fromConnection` in function should be lowercase
dispel4py/workflow_graph.py:214:25: N806 Variable `fromPE` in function should be lowercase
dispel4py/workflow_graph.py:214:33: N806 Variable `fromConnection` in function should be lowercase
dispel4py/workflow_graph.py:221:33: N806 Variable `toPE` in function should be lowercase
dispel4py/workflow_graph.py:222:33: N806 Variable `toConnection` in function should be lowercase
dispel4py/workflow_graph.py:224:29: N806 Variable `toPE` in function should be lowercase
dispel4py/workflow_graph.py:224:35: N806 Variable `toConnection` in function should be lowercase
dispel4py/workflow_graph.py:229:5: PLR0912 Too many branches (20 > 12)
dispel4py/workflow_graph.py:256:9: N806 Variable `inputNames` in function should be lowercase
dispel4py/workflow_graph.py:257:9: N806 Variable `outputNames` in function should be lowercase
dispel4py/workflow_graph.py:260:17: N806 Variable `inputName` in function should be lowercase
dispel4py/workflow_graph.py:261:17: N806 Variable `dotName` in function should be lowercase
dispel4py/workflow_graph.py:265:17: N806 Variable `outputName` in function should be lowercase
dispel4py/workflow_graph.py:266:17: N806 Variable `dotName` in function should be lowercase
dispel4py/workflow_graph.py:286:21: PLW2901 `for` loop variable `node` overwritten by assignment target
dispel4py/workflow_graph.py:293:21: N806 Variable `destNode` in function should be lowercase
dispel4py/workflow_graph.py:295:21: N806 Variable `destNode` in function should be lowercase
dispel4py/workflow_graph.py:306:35: N803 Argument name `instanceNames` should be lowercase
dispel4py/workflow_graph.py:308:5: SIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
dispel4py/workflow_graph.py:311:5: E722 Do not use bare `except`
dispel4py/workflow_graph.py:328:5: N802 Function name `drawDot` should be lowercase
doc/conf.py:1:1: INP001 File `doc/conf.py` is part of an implicit namespace package. Add an `__init__.py`.
doc/conf.py:49:1: A001 Variable `copyright` is shadowing a Python builtin
prov/__init__.py:14:18: A002 Argument `format` is shadowing a Python builtin
prov/__init__.py:37:9: A001 Variable `format` is shadowing a Python builtin
prov/__init__.py:40:9: E722 Do not use bare `except`
prov/__init__.py:40:9: PERF203 `try`-`except` within a loop incurs performance overhead
prov/__init__.py:42:5: PLW0120 `else` clause on loop without a `break` statement; remove the `else` and de-indent all the code inside it
prov/__init__.py:43:15: TRY003 Avoid specifying long messages outside the exception class
prov/dot.py:138:5: PLR0915 Too many statements (104 > 50)
prov/dot.py:166:9: PLR0912 Too many branches (14 > 12)
prov/dot.py:166:9: PLR0915 Too many statements (94 > 50)
prov/dot.py:301:17: B020 Loop control variable `bundle` overrides iterable it iterates
prov/dot.py:321:46: PLR2004 Magic value used in comparison, consider replacing 2 with a constant variable
prov/dot.py:323:29: PLR2004 Magic value used in comparison, consider replacing 2 with a constant variable
prov/identifier.py:12:7: FIX002 Line contains TODO, consider resolving the issue
prov/identifier.py:99:9: RET505 Unnecessary `else` after `return` statement
prov/identifier.py:125:9: RET505 Unnecessary `else` after `return` statement
prov/model.py:30:1: F403 `from prov.constants import *` used; unable to detect undefined names
prov/model.py:38:5: RET505 Unnecessary `else` after `return` statement
prov/model.py:53:5: RET505 Unnecessary `elif` after `return` statement
prov/model.py:97:5: RET505 Unnecessary `elif` after `return` statement
prov/model.py:104:11: FIX002 Line contains TODO, consider resolving the issue
prov/model.py:115:21: G004 Logging statement uses f-string
prov/model.py:124:21: G001 Logging statement uses `str.format`
prov/model.py:177:9: RET505 Unnecessary `else` after `return` statement
prov/model.py:185:7: N818 Exception name `ProvException` should be named with an Error suffix
prov/model.py:309:9: RET505 Unnecessary `elif` after `return` statement
prov/model.py:326:9: PLR0912 Too many branches (16 > 12)
prov/model.py:368:27: TRY003 Avoid specifying long messages outside the exception class
prov/model.py:379:21: SIM105 Use `contextlib.suppress(TypeError)` instead of `try`-`except`-`pass`
prov/model.py:389:21: RET506 Unnecessary `else` after `raise` statement
prov/model.py:412:61: FIX002 Line contains TODO, consider resolving the issue
prov/model.py:425:19: FIX002 Line contains TODO, consider resolving the issue
prov/model.py:444:23: FIX002 Line contains TODO, consider resolving the issue
prov/model.py:495:9: N802 Function name `wasGeneratedBy` should be lowercase
prov/model.py:499:9: N802 Function name `wasInvalidatedBy` should be lowercase
prov/model.py:503:9: N802 Function name `wasDerivedFrom` should be lowercase
prov/model.py:503:9: PLR0913 Too many arguments to function call (6 > 5)
prov/model.py:504:15: N803 Argument name `usedEntity` should be lowercase
prov/model.py:511:9: N802 Function name `wasAttributedTo` should be lowercase
prov/model.py:515:9: N802 Function name `alternateOf` should be lowercase
prov/model.py:519:9: N802 Function name `specializationOf` should be lowercase
prov/model.py:519:32: N803 Argument name `generalEntity` should be lowercase
prov/model.py:523:9: N802 Function name `hadMember` should be lowercase
prov/model.py:535:24: N803 Argument name `startTime` should be lowercase
prov/model.py:535:40: N803 Argument name `endTime` should be lowercase
prov/model.py:541:9: N802 Function name `get_startTime` should be lowercase
prov/model.py:545:9: N802 Function name `get_endTime` should be lowercase
prov/model.py:555:9: N802 Function name `wasInformedBy` should be lowercase
prov/model.py:559:9: N802 Function name `wasStartedBy` should be lowercase
prov/model.py:563:9: N802 Function name `wasEndedBy` should be lowercase
prov/model.py:567:9: N802 Function name `wasAssociatedWith` should be lowercase
prov/model.py:645:9: N802 Function name `actedOnBehalfOf` should be lowercase
prov/model.py:753:12: FIX002 Line contains TODO, consider resolving the issue
prov/model.py:800:15: FIX002 Line contains TODO, consider resolving the issue
prov/model.py:829:9: PLR0911 Too many return statements (12 > 6)
prov/model.py:829:9: PLR0912 Too many branches (20 > 12)
prov/model.py:858:17: RET505 Unnecessary `else` after `return` statement
prov/model.py:878:9: RET505 Unnecessary `elif` after `return` statement
prov/model.py:887:13: RET505 Unnecessary `else` after `return` statement
prov/model.py:961:9: RET505 Unnecessary `else` after `return` statement
prov/model.py:974:9: RET505 Unnecessary `else` after `return` statement
prov/model.py:978:11: FIX002 Line contains TODO, consider resolving the issue
prov/model.py:989:13: RET505 Unnecessary `else` after `return` statement
prov/model.py:1076:11: FIX002 Line contains TODO, consider resolving the issue
prov/model.py:1125:23: TRY003 Avoid specifying long messages outside the exception class
prov/model.py:1179:36: N803 Argument name `startTime` should be lowercase
prov/model.py:1179:52: N803 Argument name `endTime` should be lowercase
prov/model.py:1190:9: PLR0913 Too many arguments to function call (6 > 5)
prov/model.py:1204:9: PLR0913 Too many arguments to function call (6 > 5)
prov/model.py:1218:9: PLR0913 Too many arguments to function call (7 > 5)
prov/model.py:1239:9: PLR0913 Too many arguments to function call (7 > 5)
prov/model.py:1260:9: PLR0913 Too many arguments to function call (6 > 5)
prov/model.py:1295:9: PLR0913 Too many arguments to function call (6 > 5)
prov/model.py:1309:9: PLR0913 Too many arguments to function call (6 > 5)
prov/model.py:1336:9: PLR0913 Too many arguments to function call (8 > 5)
prov/model.py:1338:9: N803 Argument name `generatedEntity` should be lowercase
prov/model.py:1339:9: N803 Argument name `usedEntity` should be lowercase
prov/model.py:1357:9: PLR0913 Too many arguments to function call (8 > 5)
prov/model.py:1359:9: N803 Argument name `generatedEntity` should be lowercase
prov/model.py:1360:9: N803 Argument name `usedEntity` should be lowercase
prov/model.py:1379:9: PLR0913 Too many arguments to function call (8 > 5)
prov/model.py:1381:9: N803 Argument name `generatedEntity` should be lowercase
prov/model.py:1382:9: N803 Argument name `usedEntity` should be lowercase
prov/model.py:1401:9: PLR0913 Too many arguments to function call (8 > 5)
prov/model.py:1403:9: N803 Argument name `generatedEntity` should be lowercase
prov/model.py:1404:9: N803 Argument name `usedEntity` should be lowercase
prov/model.py:1423:30: N803 Argument name `specificEntity` should be lowercase
prov/model.py:1423:46: N803 Argument name `generalEntity` should be lowercase
prov/model.py:1442:9: N803 Argument name `specificEntity` should be lowercase
prov/model.py:1443:9: N803 Argument name `generalEntity` should be lowercase
prov/model.py:1468:9: PLR0913 Too many arguments to function call (6 > 5)
prov/model.py:1498:13: A001 Variable `format` is shadowing a Python builtin
prov/model.py:1500:13: A001 Variable `format` is shadowing a Python builtin
prov/model.py:1501:9: A001 Variable `format` is shadowing a Python builtin
prov/model.py:1543:5: N815 Variable `wasGeneratedBy` in class scope should not be mixedCase
prov/model.py:1545:5: N815 Variable `wasStartedBy` in class scope should not be mixedCase
prov/model.py:1546:5: N815 Variable `wasEndedBy` in class scope should not be mixedCase
prov/model.py:1547:5: N815 Variable `wasInvalidatedBy` in class scope should not be mixedCase
prov/model.py:1548:5: N815 Variable `wasInformedBy` in class scope should not be mixedCase
prov/model.py:1549:5: N815 Variable `wasAttributedTo` in class scope should not be mixedCase
prov/model.py:1550:5: N815 Variable `wasAssociatedWith` in class scope should not be mixedCase
prov/model.py:1551:5: N815 Variable `actedOnBehalfOf` in class scope should not be mixedCase
prov/model.py:1552:5: N815 Variable `wasInfluencedBy` in class scope should not be mixedCase
prov/model.py:1553:5: N815 Variable `wasDerivedFrom` in class scope should not be mixedCase
prov/model.py:1554:5: N815 Variable `wasRevisionOf` in class scope should not be mixedCase
prov/model.py:1555:5: N815 Variable `wasQuotedFrom` in class scope should not be mixedCase
prov/model.py:1556:5: N815 Variable `hadPrimarySource` in class scope should not be mixedCase
prov/model.py:1557:5: N815 Variable `alternateOf` in class scope should not be mixedCase
prov/model.py:1558:5: N815 Variable `specializationOf` in class scope should not be mixedCase
prov/model.py:1559:5: N815 Variable `mentionOf` in class scope should not be mixedCase
prov/model.py:1560:5: N815 Variable `hadMember` in class scope should not be mixedCase
prov/model.py:1620:9: RET505 Unnecessary `else` after `return` statement
prov/model.py:1666:19: TRY003 Avoid specifying long messages outside the exception class
prov/model.py:1673:23: TRY003 Avoid specifying long messages outside the exception class
prov/model.py:1685:19: TRY003 Avoid specifying long messages outside the exception class
prov/model.py:1695:19: TRY003 Avoid specifying long messages outside the exception class
prov/model.py:1702:19: TRY003 Avoid specifying long messages outside the exception class
prov/model.py:1711:19: TRY003 Avoid specifying long messages outside the exception class
prov/model.py:1717:43: A002 Argument `format` is shadowing a Python builtin
prov/model.py:1732:9: RET505 Unnecessary `else` after `return` statement
prov/model.py:1747:13: RET505 Unnecessary `else` after `return` statement
prov/model.py:1753:48: A002 Argument `format` is shadowing a Python builtin
prov/model.py:1773:13: RET505 Unnecessary `else` after `return` statement
prov/serializers/__init__.py:25:7: N818 Exception name `DoNotExist` should be named with an Error suffix
prov/serializers/__init__.py:55:9: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
prov/serializers/__init__.py:55:9: TRY200 Use `raise from` to specify exception cause
prov/serializers/provjson.py:14:1: F403 `from prov.constants import *` used; unable to detect undefined names
prov/serializers/provjson.py:28:7: N818 Exception name `ProvJSONException` should be named with an Error suffix
prov/serializers/provjson.py:116:9: RET505 Unnecessary `else` after `return` statement
prov/serializers/provjson.py:144:5: PLR0912 Too many branches (15 > 12)
prov/serializers/provjson.py:170:23: FIX002 Line contains TODO, consider resolving the issue
prov/serializers/provjson.py:174:17: PLR5501 Use `elif` instead of `else` then `if`, to reduce indentation
prov/serializers/provjson.py:216:5: PLR0912 Too many branches (22 > 12)
prov/serializers/provjson.py:229:13: SIM108 Use ternary operator `elements = [content] if hasattr(content, "items") else content` instead of `if`-`else`-block
prov/serializers/provjson.py:258:39: FIX004 Line contains HACK, consider resolving the issue
prov/serializers/provjson.py:283:21: PLR5501 Use `elif` instead of `else` then `if`, to reduce indentation
prov/serializers/provjson.py:295:19: FIX004 Line contains HACK, consider resolving the issue
prov/serializers/provjson.py:307:5: RET505 Unnecessary `elif` after `return` statement
prov/serializers/provjson.py:310:11: FIX002 Line contains TODO, consider resolving the issue
prov/serializers/provjson.py:311:11: FIX002 Line contains TODO, consider resolving the issue
prov/serializers/provjson.py:330:9: RET505 Unnecessary `elif` after `return` statement
prov/serializers/provjson.py:343:7: FIX002 Line contains TODO, consider resolving the issue
prov/serializers/provjson.py:347:5: RET505 Unnecessary `else` after `return` statement
prov/serializers/provn.py:16:35: ARG002 Unused method argument: `kwargs`
prov/serializers/provxml.py:39:54: ARG002 Unused method argument: `kwargs`
prov/serializers/provxml.py:72:9: PLR0912 Too many branches (28 > 12)
prov/serializers/provxml.py:72:9: PLR0915 Too many statements (62 > 50)
prov/serializers/provxml.py:167:17: N806 Variable `ALWAYS_CHECK` in function should be lowercase
prov/serializers/provxml.py:175:17: N806 Variable `ALWAYS_CHECK` in function should be lowercase
prov/serializers/provxml.py:220:37: ARG002 Unused method argument: `kwargs`
prov/serializers/provxml.py:256:23: TRY003 Avoid specifying long messages outside the exception class
prov/serializers/provxml.py:261:17: B028 No explicit `stacklevel` keyword argument found
prov/serializers/provxml.py:315:17: PLW2901 `for` loop variable `value` overwritten by assignment target
prov/serializers/provxml.py:348:17: B028 No explicit `stacklevel` keyword argument found
prov/serializers/provxml.py:363:5: N802 Function name `xml_qname_to_QualifiedName` should be lowercase
prov/serializers/provxml.py:400:5: N806 Variable `NS_XML` in function should be lowercase
prov/test/feedbackloop/feedbackloop.py:63:15: E999 SyntaxError: Unexpected token 'inputs'
prov/test/rtxcorr/rtxcor.py:462:15: E999 SyntaxError: Unexpected token "FEEEEDBACK: "
prov/test/rtxcorr/rtxcor_rays.py:60:1: F403 `from dispel4py.new.processor import *` used; unable to detect undefined names
prov/test/rtxcorr/rtxcor_rays.py:61:1: F403 `from dispel4py.provenance import *` used; unable to detect undefined names
prov/test/rtxcorr/rtxcor_rays.py:62:1: F403 `from dispel4py.visualisation import *` used; unable to detect undefined names
prov/test/rtxcorr/rtxcor_rays.py:285:9: N806 Variable `G` in function should be lowercase
prov/test/rtxcorr/rtxcor_rays.py:363:60: N803 Argument name `toW3C` should be lowercase
prov/test/rtxcorr/rtxcor_rays.py:414:57: N803 Argument name `toW3C` should be lowercase
prov/test/rtxcorr/rtxcor_rays.py:433:17: SIM115 Use context handler for opening files
prov/test/rtxcorr/rtxcor_rays.py:438:24: N803 Argument name `toW3C` should be lowercase
prov/test/rtxcorr/rtxcor_rays.py:482:1: N816 Variable `clustersRecorders` in global scope should not be mixedCase
prov/test/rtxcorr/rtxcor_rays.py:487:5: N802 Function name `createWf` should be lowercase
prov/test/rtxcorr/rtxcor_rays.py:529:5: N802 Function name `createGraphWithProv` should be lowercase
prov/test/rtxcorr/rtxcorr3.py:17:1: F403 `from dispel4py.new.processor import *` used; unable to detect undefined names
prov/test/rtxcorr/rtxcorr3.py:18:1: F403 `from dispel4py.provenance import *` used; unable to detect undefined names
prov/test/rtxcorr/rtxcorr3.py:106:9: N806 Variable `G` in function should be lowercase
prov/test/rtxcorr/rtxcorr3.py:288:5: N802 Function name `createWf` should be lowercase
prov/test/rtxcorr/rtxcorr3.py:353:9: N802 Function name `extractItemMetadata` should be lowercase
prov/test/rtxcorr/rtxcorr3.py:353:41: ARG002 Unused method argument: `port`
prov/test/rtxcorr/rtxcorr3.py:363:9: N802 Function name `applyFlowResetPolicy` should be lowercase
prov/test/rtxcorr/rtxcorr3.py:373:60: N803 Argument name `toW3C` should be lowercase
prov/test/rtxcorr/rtxcorr3.py:383:9: N802 Function name `sendToService` should be lowercase
prov/test/rtxcorr/rtxcorr3.py:408:9: E722 Do not use bare `except`
prov/test/rtxcorr/rtxcorr3.py:413:57: N803 Argument name `toW3C` should be lowercase
prov/test/rtxcorr/rtxcorr3.py:421:13: B018 Found useless expression. Either assign it to a variable or remove it.
prov/test/rtxcorr/rtxcorr3.py:432:25: SIM115 Use context handler for opening files
prov/test/rtxcorr/rtxcorr3.py:437:9: E722 Do not use bare `except`
prov/test/rtxcorr/rtxcorr3.py:442:59: N803 Argument name `toW3C` should be lowercase
prov/test/rtxcorr/rtxcorr3.py:468:9: PLR0912 Too many branches (25 > 12)
prov/test/rtxcorr/rtxcorr3.py:593:9: E722 Do not use bare `except`
prov/test/rtxcorr/rtxcorr3.py:598:61: N803 Argument name `toW3C` should be lowercase
prov/test/rtxcorr/rtxcorr3.py:608:25: SIM115 Use context handler for opening files
prov/test/rtxcorr/rtxcorr3.py:614:13: B018 Found useless expression. Either assign it to a variable or remove it.
prov/test/rtxcorr/rtxcorr3.py:615:9: E722 Do not use bare `except`
prov/test/rtxcorr/rtxcorr3.py:631:34: PLR2004 Magic value used in comparison, consider replacing 100 with a constant variable
prov/test/rtxcorr/rtxcorr3.py:634:25: SIM115 Use context handler for opening files
prov/test/rtxcorr/rtxcorr3.py:641:9: E722 Do not use bare `except`
prov/test/rtxcorr/rtxcorr3.py:645:5: N802 Function name `createGraphWithProv` should be lowercase
prov/test/rtxcorr/rtxcorr3.py:700:1: F403 `from dispel4py.visualisation import *` used; unable to detect undefined names
prov/test/rtxcorr/xcorr_parallel.py:7:1: F403 `from dispel4py.new.processor import *` used; unable to detect undefined names
prov/test/rtxcorr/xcorr_parallel.py:8:1: F403 `from dispel4py.provenance import *` used; unable to detect undefined names
prov/test/rtxcorr/xcorr_parallel.py:9:1: F403 `from dispel4py.seismo.seismo import *` used; unable to detect undefined names
prov/test/rtxcorr/xcorr_parallel.py:27:9: N806 Variable `inputLocation` in function should be lowercase
prov/test/rtxcorr/xcorr_parallel.py:45:9: N806 Variable `outputLocation` in function should be lowercase
prov/test/rtxcorr/xcorr_parallel.py:135:5: N802 Function name `createWf` should be lowercase
prov/test/rtxcorr/xcorr_parallel.py:199:5: N802 Function name `createGraphWithProv` should be lowercase
resources/simple_wrapper.py:24:32: ARG002 Unused method argument: `context`
resources/simple_wrapper.py:99:9: E722 Do not use bare `except`
resources/source_wrapper.py:24:32: ARG002 Unused method argument: `context`
resources/source_wrapper.py:61:9: N802 Function name `nextTuple` should be lowercase
resources/source_wrapper.py:86:9: E722 Do not use bare `except`
setup.py:25:12: SIM115 Use context handler for opening files
Found 764 errors.
